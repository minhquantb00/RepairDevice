// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepairManagement.Infrastructure.DataAccess;

#nullable disable

namespace RepairManagement.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RepairManagement.Domain.Entities.BaoHanh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ThietBiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ThietBiId");

                    b.ToTable("BaoHanhs");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.ChiPhiPhatSinh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("ChiPhi")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HoaDonId")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonId");

                    b.ToTable("ChiPhiPhatSinhs");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.ChiTietHoaDon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HoaDonId")
                        .HasColumnType("int");

                    b.Property<int?>("ThietBiId")
                        .HasColumnType("int");

                    b.Property<int>("ThietBiSuaChuaId")
                        .HasColumnType("int");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonId");

                    b.HasIndex("ThietBiId");

                    b.ToTable("ChiTietHoaDons");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.ConfirmEmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfirmCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiredTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsConfirm")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ConfirmEmails");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.DanhGiaDichVu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DichVuId")
                        .HasColumnType("int");

                    b.Property<int>("DiemChamSocKhachHang")
                        .HasColumnType("int");

                    b.Property<int>("DiemDichVu")
                        .HasColumnType("int");

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<string>("PhanHoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThietBiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianDanhGia")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DichVuId");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("ThietBiId");

                    b.ToTable("DanhGiaDichVus");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.DatLichSuaChua", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DichVuId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenThietBi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianDat")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DichVuId");

                    b.HasIndex("KhachHangId");

                    b.ToTable("DatLichSuaChuas");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.DichVu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiemDichVuTrungBinh")
                        .HasColumnType("int");

                    b.Property<string>("MoTaDichVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuotDanhGia")
                        .HasColumnType("int");

                    b.Property<string>("TenDichVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DichVus");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.FAQ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CauHoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CauTraLoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FAQs");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.HangTonKho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LinhKienId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarningLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LinhKienId");

                    b.ToTable("HangTonKhos");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.HieuSuatNhanVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.Property<int>("SoThietBiDaSua")
                        .HasColumnType("int");

                    b.Property<int>("TongThoiGianXuLy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("HieuSuatNhanViens");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.HoaDon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BillStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PayTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("TongTien")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("KhachHangId");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.KhachHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Diem")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("NguoiDungId")
                        .HasColumnType("int");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.LichSuChat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ChuyenChoNhanVien")
                        .HasColumnType("bit");

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<string>("NoiDungChatBot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDungKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KhachHangId");

                    b.ToTable("LichSuChats");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.LichSuSuaChua", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Gia")
                        .HasColumnType("float");

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<string>("MoTaLoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThietBiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianSua")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("ThietBiId");

                    b.ToTable("LichSuSuaChuas");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.LichSuTichDiem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KhachHangId");

                    b.ToTable("LichSuTichDiems");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.LinhKien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("GiaBan")
                        .HasColumnType("float");

                    b.Property<double?>("GiaNhap")
                        .HasColumnType("float");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiLinhKien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLinhKien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LinhKiens");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.LinhKienSuaChuaThietBi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LinhKienId")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongDung")
                        .HasColumnType("int");

                    b.Property<int>("ThietBiSuaChuaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LinhKienId");

                    b.HasIndex("ThietBiSuaChuaId");

                    b.ToTable("LinhKienSuaChuaThietBis");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.LoaiThietBi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiThietBis");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.NguoiDung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NguoiDungs");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.PhanCongCongViec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("ThietBiSuaChuaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiGianHoanThanh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianPhanCong")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NguoiDungId");

                    b.HasIndex("ThietBiSuaChuaId");

                    b.ToTable("PhanCongCongViecs");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiredTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.ThietBi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Gia")
                        .HasColumnType("float");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<int>("LoaiThietBiId")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TenThietBi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("LoaiThietBiId");

                    b.ToTable("ThietBi");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.ThietBiSuaChua", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChuCuaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<string>("MoTaLoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TenThietBiSuaChua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThietBiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianBaoHanh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianDuKien")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianGiaoHang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianNhanSua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianThucTe")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("ThietBiId");

                    b.ToTable("ThietBiSuaChuas");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.ThongBao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("DaXem")
                        .HasColumnType("bit");

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianGui")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KhachHangId");

                    b.ToTable("ThongBaos");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NguoiDungId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.XuatNhapKho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LinhKienId")
                        .HasColumnType("int");

                    b.Property<int?>("LoaiGiaoDich")
                        .HasColumnType("int");

                    b.Property<int>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianGiaoDich")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LinhKienId");

                    b.HasIndex("NhanVienId");

                    b.ToTable("XuatNhapKhos");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.BaoHanh", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.ThietBi", "ThietBi")
                        .WithMany("BaoHanhs")
                        .HasForeignKey("ThietBiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ThietBi");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.ChiPhiPhatSinh", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.HoaDon", "HoaDon")
                        .WithMany("ChiPhiPhatSinhs")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.ChiTietHoaDon", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.HoaDon", "HoaDon")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RepairManagement.Domain.Entities.ThietBi", null)
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("ThietBiId");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.ConfirmEmail", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.NguoiDung", "User")
                        .WithMany("ConfirmEmails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.DanhGiaDichVu", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.DichVu", "DichVu")
                        .WithMany("DanhGiaDichVus")
                        .HasForeignKey("DichVuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RepairManagement.Domain.Entities.KhachHang", "KhachHang")
                        .WithMany("DanhGiaDichVus")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RepairManagement.Domain.Entities.ThietBi", null)
                        .WithMany("DanhGiaDichVus")
                        .HasForeignKey("ThietBiId");

                    b.Navigation("DichVu");

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.DatLichSuaChua", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.DichVu", "DichVu")
                        .WithMany()
                        .HasForeignKey("DichVuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RepairManagement.Domain.Entities.KhachHang", "KhachHang")
                        .WithMany("DatLichSuaChuas")
                        .HasForeignKey("KhachHangId");

                    b.Navigation("DichVu");

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.HangTonKho", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.LinhKien", "LinhKien")
                        .WithMany("HangTonKhos")
                        .HasForeignKey("LinhKienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LinhKien");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.HieuSuatNhanVien", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.NguoiDung", "NguoiDung")
                        .WithMany("HieuSuatNhanViens")
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.HoaDon", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.KhachHang", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.NguoiDung", "NguoiDung")
                        .WithMany("KhachHangs")
                        .HasForeignKey("NguoiDungId");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.LichSuChat", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.KhachHang", "KhachHang")
                        .WithMany("LichSuChats")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.LichSuSuaChua", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.KhachHang", "KhachHang")
                        .WithMany("LichSuSuaChuas")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RepairManagement.Domain.Entities.ThietBi", "ThietBi")
                        .WithMany("LichSuSuaChuas")
                        .HasForeignKey("ThietBiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("ThietBi");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.LichSuTichDiem", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.KhachHang", "KhachHang")
                        .WithMany("LichSuTichDiems")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.LinhKienSuaChuaThietBi", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.LinhKien", "LinhKien")
                        .WithMany("LinhKienSuaChuaThietBis")
                        .HasForeignKey("LinhKienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RepairManagement.Domain.Entities.ThietBiSuaChua", "ThietBiSuaChua")
                        .WithMany("LinhKienSuaChuaThietBis")
                        .HasForeignKey("ThietBiSuaChuaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LinhKien");

                    b.Navigation("ThietBiSuaChua");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.PhanCongCongViec", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.NguoiDung", "NguoiDung")
                        .WithMany("PhanCongCongViecs")
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RepairManagement.Domain.Entities.ThietBiSuaChua", "ThietBiSuaChua")
                        .WithMany("PhanCongCongViecs")
                        .HasForeignKey("ThietBiSuaChuaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("ThietBiSuaChua");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.NguoiDung", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.ThietBi", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.KhachHang", "KhachHang")
                        .WithMany("ThietBis")
                        .HasForeignKey("KhachHangId");

                    b.HasOne("RepairManagement.Domain.Entities.LoaiThietBi", "LoaiThietBi")
                        .WithMany("ThietBis")
                        .HasForeignKey("LoaiThietBiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("LoaiThietBi");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.ThietBiSuaChua", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.KhachHang", "KhachHang")
                        .WithMany("ThietBiSuaChuas")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RepairManagement.Domain.Entities.ThietBi", "ThietBi")
                        .WithMany("ThietBiSuaChuas")
                        .HasForeignKey("ThietBiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("ThietBi");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.ThongBao", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.KhachHang", "KhachHang")
                        .WithMany("ThongBaos")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.NguoiDung", "NguoiDung")
                        .WithMany("UserRoles")
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RepairManagement.Domain.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.XuatNhapKho", b =>
                {
                    b.HasOne("RepairManagement.Domain.Entities.LinhKien", "LinhKien")
                        .WithMany("XuatNhapKhos")
                        .HasForeignKey("LinhKienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RepairManagement.Domain.Entities.NguoiDung", "NhanVien")
                        .WithMany("XuatNhapKhos")
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LinhKien");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.DichVu", b =>
                {
                    b.Navigation("DanhGiaDichVus");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.HoaDon", b =>
                {
                    b.Navigation("ChiPhiPhatSinhs");

                    b.Navigation("ChiTietHoaDons");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.KhachHang", b =>
                {
                    b.Navigation("DanhGiaDichVus");

                    b.Navigation("DatLichSuaChuas");

                    b.Navigation("HoaDons");

                    b.Navigation("LichSuChats");

                    b.Navigation("LichSuSuaChuas");

                    b.Navigation("LichSuTichDiems");

                    b.Navigation("ThietBiSuaChuas");

                    b.Navigation("ThietBis");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.LinhKien", b =>
                {
                    b.Navigation("HangTonKhos");

                    b.Navigation("LinhKienSuaChuaThietBis");

                    b.Navigation("XuatNhapKhos");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.LoaiThietBi", b =>
                {
                    b.Navigation("ThietBis");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.NguoiDung", b =>
                {
                    b.Navigation("ConfirmEmails");

                    b.Navigation("HieuSuatNhanViens");

                    b.Navigation("KhachHangs");

                    b.Navigation("PhanCongCongViecs");

                    b.Navigation("RefreshTokens");

                    b.Navigation("UserRoles");

                    b.Navigation("XuatNhapKhos");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.ThietBi", b =>
                {
                    b.Navigation("BaoHanhs");

                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("DanhGiaDichVus");

                    b.Navigation("LichSuSuaChuas");

                    b.Navigation("ThietBiSuaChuas");
                });

            modelBuilder.Entity("RepairManagement.Domain.Entities.ThietBiSuaChua", b =>
                {
                    b.Navigation("LinhKienSuaChuaThietBis");

                    b.Navigation("PhanCongCongViecs");
                });
#pragma warning restore 612, 618
        }
    }
}
